var container;var camera;var controls;var scene;var renderer;var light;var mtlLoader;var objLoader;var model;var targetRotation=0;var targetRotationOnMouseDown=0;var mouseX=0;var mouseXOnMouseDown=0;var boundingBox=new THREE.Box3();init();function init(){camera=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1000);camera.position.z=10;scene=new THREE.Scene();light=new THREE.AmbientLight(16777215);renderer=new THREE.WebGLRenderer();renderer.setClearColor(0);renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(window.innerWidth,window.innerHeight);container=document.getElementById("container");container.appendChild(renderer.domElement);controls=new THREE.OrbitControls(camera,renderer.domElement);controls.enableDamping=true;controls.dampingFactor=0.25;controls.enableZoom=true;controls.enablePan=false;controls.autoRotate=true;controls.enableKeys=false;controls.rotateSpeed=0.3;mtlLoader=new THREE.MTLLoader();objLoader=new THREE.OBJLoader();mtlLoader.setPath("../assets/model/");mtlLoader.load("1.mtl",function(a){try{a.preload();objLoader.setMaterials(a);objLoader.setPath("../assets/model/");objLoader.load("1.obj",function(d){try{model=d;for(var g=0;g<model.children.length;g++){var c=model.children[g];c.geometry.computeBoundingBox();var j=c.geometry.boundingBox;if(j!=null){boundingBox.union(j)}}model.position.copy(boundingBox.getCenter().negate());scene.add(model);var f=Math.sqrt((Math.pow((boundingBox.max.x-boundingBox.min.x),2)+Math.pow((boundingBox.max.y-boundingBox.min.y),2)+Math.pow((boundingBox.max.z-boundingBox.min.z),2)));controls.minDistance=f;controls.maxDistance=f*3}catch(h){console.warn("load model error"+h.message)}},function(){},function(){console.warn("load model error")})}catch(b){console.warn("load model error"+b.message)}});window.addEventListener("resize",onWindowResize,false);scene.add(light);update()}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight)}function update(){requestAnimationFrame(update);if(controls!=null){controls.update()}if(model!=null){model.rotation.y+=(targetRotation-model.rotation.y)*0.05}renderer.render(scene,camera)};